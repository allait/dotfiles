#compdef npm
#autoload

# basic npm completions
_npm_installed() {
    installed_pkg=(`npm list --loglevel silent --color false --description false installed | grep -o "^\S\+\s"`) 
}

_npm_all() {
    all_pkg=(`npm list --loglevel silent --color false --description false | grep -o "^\S\+\s"`) 
}
local -a _1st_arguments
_1st_arguments=(
    'install:Install package'
    'activate:Activate installed package version'
    'deactivate:Deactivate installed package version'
    'uninstall:Uninstall package'
    'rm:Uninstall package'
    'link:Symlink a package folder'
    'publish:publish'
    'tag:tag'
    'adduser:adduser'
    'config:config'
    'help:Show command help'
    'cache:cache'
    'test:test'
    'stop:Stop a package'
    'start:Start a package(run "start" script)'
    'restart:Restart a package'
    'unpublish:unpublish'
    'ls:List available packages'
    'list:List available packages'
    'owner:owner'
    'update:Update package'
    'view:View package registry info'
    'repl:Launch interactive shell'
    'rebuild:Rebuild a package'
    'bundle:bundle'
    'outdated:outdated'
    'init:Interactively create package.json file'
    'deprecate:deprecate'
    'version:Bump a package version'
    'edit:Edit an installed package'
    'explore:Browse an installed package'
    'docs:Show docs for a package'
    'faq:Show FAQ'
    'run-script:run-script'
    'set:Set configuration option in config file'
    'get:Get configuration option value'
)

local expl
local -a all_pkg installed_pkg

_arguments \
  '(--version)--version[Show version number and exit]' \
  '(--key)'--key=}'[Set key=value]' \
  '*:: :->subcmds' && return 0

if (( CURRENT == 1 )); then
  _describe -t commands "npm subcommand" _1st_arguments
  return
fi

case "$words[1]" in
  list)
      if [[ "$state" == forms ]]; then
        _npm_installed
        _requested installed_pkg expl 'installed packages' compadd -a installed_pkg
      fi ;;
  uninstall|update|rebuild|activate|deactivate|rm|explore|docs)
    _npm_installed
    _wanted installed_pkg expl 'installed packages' compadd -a installed_pkg ;;
  install|view)
    _npm_all
    _wanted all_pkg expl 'installed packages' compadd -a all_pkg ;;
esac
