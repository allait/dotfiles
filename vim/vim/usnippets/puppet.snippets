# Conditionals

snippet ?
${1:$var} = ${2:$operatingsystem}? {
	${3: linux} => ${4: val},$0
}
endsnippet

snippet case
case ${1:$operatingsystem} {
	${2:'linux'}: {${3:include linux}}$0
}
endsnippet

snippet if
if ${1:$var > 0} {
	${2:# code}
}
endsnippet

snippet else
else {
	${1:# code}
}
endsnippet

# Resource collections

snippet class
class ${1:classname}${2:($version="1.0")}${3: inherits ${4:parent}} {
	${5:# code}
}
endsnippet

snippet stage
stage { "${1:stagename}": ${2:before|require} => Stage[${3:main}]}$0
endsnippet

snippet define
define ${1:typename}(${2:$path="/var/$name"}) {
	${3:# code}
}
endsnippet

# Nodes

snippet node
node ${1:webserver}{${2: inherits ${3:parent}} {
	${4:class { ${5:classname}: ${6:version => "1.0"}}}
}
endsnippet

# Resources

snippet file
file { "${1:filename}": 
	source => "puppet:///${2:source}",
	ensure => ${3:file},
	owner => ${4:root},
	group => ${5:root},
	mode => ${6:0755},
}
endsnippet

snippet exec
exec { "${1:name}":
	command => "${2:command}",
	refreshonly => "${3:true}",
	onlyif => "${4:run_if_true}",
	unless => "${5:run_if_false}",
}
endsnippet

snippet encap
encap { "${1:package_name}":
	ensure => ${2:package_version},
}
endsnippet

snippet package
package { "${1:package_name}":
	ensure => ${2:package_version},
}
endsnippet

snippet tidy
tidy { "${1:directory}":
	age => ${2:0},
	matches => [ "${3:pattern}" ],
	recurse => ${4:true},
	rmdirs => ${5:true},
}
endsnippet

snippet cron
cron { "${1:name}":
	command => "${2:command}",
	hour => ${3:hour},
	minute => ${4:minute},
	day => ${5:day},
}
endsnippet
