# #!/usr/bin/env ruby
snippet #!
#!/usr/bin/env ruby
endsnippet

snippet =b
=begin rdoc
	${1}
=end
endsnippet

snippet y
:yields: ${1:arguments}
endsnippet

snippet beg
begin
	${3}
rescue ${1:Exception} => ${2:e}
end
endsnippet

snippet req
require "${1}"${2}
endsnippet

snippet case
case ${1:object}
when ${2:condition}
	${3}
end
endsnippet

snippet when
when ${1:condition}
	${2}
endsnippet

snippet def
def ${1:method_name}
	${2}
end
endsnippet

snippet deft
def test_${1:case_name}
	${2}
end
endsnippet

snippet if
if ${1:condition}
	${2}
end
endsnippet

snippet ife
if ${1:condition}
	${2}
else
	${3}
end
endsnippet

snippet elsif
elsif ${1:condition}
	${2}
endsnippet

snippet unless
unless ${1:condition}
	${2}
end
endsnippet

snippet while
while ${1:condition}
	${2}
end
endsnippet

snippet for
for ${1:e} in ${2:c}
	${3}
end		
endsnippet

snippet until
until ${1:condition}
	${2}
end
endsnippet

snippet class
class ${1:Class}${2: < ${3:ParentClass}}
	$0
end
endsnippet

snippet mod
module ${1:Module}
	${2}
end
endsnippet

snippet array
Array.new(${1:10}) { |${2:i}| ${3} }
endsnippet

snippet hash
Hash.new { |${1:hash}, ${2:key}| $1[$2] = ${3} }
endsnippet

snippet file "File.foreach() { |line| .. }"
File.foreach(${1:"path/to/file"}) { |${2:line}| ${3} }
endsnippet

snippet file "File.read()"
File.read(${1:"path/to/file"})${2}
endsnippet

snippet Dir "Dir.global() { |file| .. }"
Dir.glob(${1:"dir/glob/*"}) { |${2:file}| ${3} }
endsnippet

snippet Dir "Dir[..]"
Dir[${1:"glob/**/*.rb"}]${2}
endsnippet

snippet dir
Filename.dirname(__FILE__)
endsnippet

snippet do
do |${1:variable}|
	${2}
end
endsnippet

snippet :
:${1:key} => ${2:"value"}${3}
endsnippet

snippet patfh
File.join(File.dirname(__FILE__), *%2[${1:rel path here}])${2}
endsnippet
